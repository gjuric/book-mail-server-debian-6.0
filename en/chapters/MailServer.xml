<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="mail-server"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:mml="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>Mail server</title>

  <para>We are going to install <application>Postfix</application> as our MTA
  (SMTP server) and <application>Courier</application> as our POP/IMAP server.
  <application>Postfix</application> will use virtual domains, and information
  about our domains and users will be stored in the
  <application>MySQL</application> database.</para>

  <para>For managing virtual domains and users we will use
  <application>PostfixAdmin</application>. For virus scanning and spam
  protection of our emails we will use <application>ClamAV</application> and
  <application>Spamassassin</application> that will be run using
  <application>amavisd-new</application>.</para>

  <para>As a local delivery agent we will use
  <application>Maildrop</application> that will be configured to move all
  messages marked as spam to the Junk folder as well as to make sure that
  users do not go over their assigned quota.</para>

  <para>This implementation of quota on the mail system does not require you
  to patch Postfix.</para>

  <para>All software is installed from official Debian repositories.</para>

  <note>
    <para>This tutorial is a combination of tutorials published on <link
    xl:href="http://articles.slicehost.com/email">http://articles.slicehost.com/email</link>
    and <link
    xl:href="https://help.ubuntu.com/community/PostfixCompleteVirtualMailSystemHowto">https://help.ubuntu.com/community/PostfixCompleteVirtualMailSystemHowto</link>
    and a lot of my own work. You also must have a valid MX record in the DNS
    zone of your domain pointing to the IP address of the server.</para>
  </note>

  <section xml:id="mail-server.dns">
    <title>DNS settings</title>

    <note>
      <para>Mail server in this example is named <systemitem
      class="fqdomainname">atlantis.example.com</systemitem>. You can also
      name it <systemitem class="fqdomainname">mail.example.com</systemitem>
      if you like.</para>
    </note>

    <para>First, we need to check our hostname</para>

    <screen>atlantis:~# <command>hostname -f</command>
atlantis.diabmon.com </screen>

    <para>If hostname did not return FQDN of your server edit
    <filename>/etc/hosts</filename>. You <filename>hosts</filename> file
    should look something like this, if not, change according to your IP
    address and server name.</para>

    <programlisting>127.0.0.1       localhost
YOUR-IP-ADDRESS atlantis.example.com atlantis </programlisting>

    <para>Now check your <filename>/etc/hostname</filename> file it should
    contain your fully qualified domain name:</para>

    <programlisting>atlantis.example.com </programlisting>

    <para>Change the names to match your server name and reboot the server.
    Run <command>hostname -f</command> again and you should see <systemitem
    class="fqdomainname">atlantis.example.com</systemitem>.</para>

    <para>Now, we need to check that our DNS servers have an MX record for our
    <systemitem class="domainname">example.com</systemitem> domain. If you
    haven't done so already Install DNS utilities:</para>

    <programlisting>apt-get install dnsutils</programlisting>

    <para>We are going to use <command>host</command> command to check
    information about our domain:</para>

    <screen>atlantis:~# <command>host</command> example.com
example.com has address YOUR-IP-ADDRESS
example.com mail is handled by 0 mail.example.com. </screen>

    <para>We can see that the mail for our domain is handled by <systemitem
    class="fqdomainname">mail.example.com</systemitem>. Which server is
    supposed to handle mail for your domain is handled by the so called MX
    records in your domains zone file. Setting up DNS zone files is out of
    scope for this document.</para>

    <para>Now we must make sure that <systemitem
    class="fqdomainname">mail.example.com</systemitem> points to the same
    address as our server (<systemitem
    class="fqdomainname">atlantis.example.com</systemitem>).</para>

    <screen>atlantis:~# <command>nslookup</command> mail.example.com
Server: YOUR-DNS-SERVER
Address: YOUR-DNS-ADDRESS#53

Non-authoritative answer:
mail.example.com canonical name = atlantis.example.com.
Name: example.com
Address: YOUR-IP-ADDRESS </screen>

    <para>It would be also nice if your reverse DNS points to the same name
    (<systemitem
    class="fqdomainname">atlantis.example.com</systemitem>).</para>

    <screen>atlantis:~# <command>nslookup</command> YOUR-IP-ADDRESS
Server: YOUR-DNS-SERVER
Address: YOUR-DNS-SERVER#53

Non-authoritative answer: 
YOUR-IP-ADDRES-REVERSE.in-addr.arpa name = atlantis.example.com. </screen>

    <para>If they do not match you will probably have to ask your ISP to
    change this for you.</para>
  </section>

  <section xml:id="postfix">
    <title>Postfix</title>

    <para>The time has finally come to install
    <application>Postfix</application>.</para>

    <programlisting>apt-get install postfix</programlisting>

    <para>During installation Postfix will ask you to choose the type of
    installation and a domain.</para>

    <para>Choose <computeroutput>Internet site</computeroutput> and enter your
    servers name <computeroutput><systemitem
    class="fqdomainname">atlantis.example.com</systemitem></computeroutput>.
    It is important that your server name is not just <systemitem
    class="domainname">example.com</systemitem>.</para>

    <para>After installation finishes we can check if Postfix is runing by
    connecting to port 25 on your localhost with telnet:</para>

    <screen># <command>telnet</command> localhost 25
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
220 atlantis.example.com ESMTP Postfix (Debian/GNU)</screen>

    <para>Type <command>quit</command> to exit.</para>

    <para>If you see Postfix responding, Postfix is working. For another check
    we can try to send email to one of your email accounts that are located on
    another server:</para>

    <screen xml:id="postfix.test-email-sending">atlantis:~# <command>mail</command> your-other-email@somedomain.com
Subject: test email from example.com
test body of the email.
.
Cc:</screen>

    <para>The single dot on the line is a sign that your are done with the
    emails body.</para>

    <para>You should be getting this email message on the account you
    specified.</para>

    <para>Check that you have your <systemitem
    class="domainname">example.com</systemitem> in a file
    <filename>/etc/mailname</filename>.</para>

    <section xml:id="postfix.inital-settings">
      <title>Initial settings</title>

      <note>
        <para>Do not be afraid to play with config files at this stage. If you
        installed <application>etckeeper</application> <link
        xl:href="#preparation.tracking-changes">as suggested</link>, you can
        always revert to the previous state. Just remember to commit your
        changes every time you change something by running <command>etckeeper
        commit "Descirption of the changes made"</command>. The default
        Postfix configuration files were already commited when we installed
        Postfix.</para>
      </note>

      <para>First we are going to delete the content of the
      <filename>/etc/postfix/main.cf</filename> file so we can fill it with
      our own.</para>

      <programlisting>atlantis:~# <command>cat</command> /dev/null &gt; /etc/postfix/main.cf</programlisting>

      <para>Now copy and paste these line, but make sure to replace
      <emphasis>myhostname = atlantis.example.com</emphasis> with your
      hostname.</para>

      <screen>##################
# Default settings
##################
biff = no
append_dot_mydomain = no
#delay_warning_time = 4h
readme_directory = no
smtpd_banner = $myhostname ESMTP $mail_name

################
# TLS parameters
################
smtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
smtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
smtpd_use_tls=yes
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

###############
# Main settings
###############
myhostname = <replaceable>atlantis.example.com</replaceable>
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
myorigin = /etc/mailname
mydestination = $mydomain, localhost.$mydomain, localhost
relayhost = 
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
mailbox_size_limit = 0
recipient_delimiter = +
inet_interfaces = all</screen>

      <tip>
        <para>Postfix extracts $mydomain from the value of the
        <varname>myhostname</varname> and strips the part before the first
        dot, including the dot. So in this case <varname>mydomain</varname> is
        <emphasis>example.com</emphasis>.</para>
      </tip>

      <para>If you are not using IPv6 you can remove IPv6 addresses from
      <varname>mynetworks</varname> and leave just <emphasis>mynetworks =
      127.0.0.0/8</emphasis>. We will use the <varname>mynetworks</varname>
      variable to tell Postfix that all computers specified in the my networks
      range can send emails without authentification. We are leaving only the
      localhost here so we make sure that mail originating from the server
      (like outputs of cron jobs and other system messages) do not get blocked
      by other rules we will implement.</para>

      <para>Restart Postfix by running <command>invoke-rc.d postfix
      restart</command> and try to send another test mail to check that we
      didn't mess something up.</para>

      <para>Now it would be a good time to also test if Postfix is receiving
      mails as well. Try sending an email to just <email>root</email> and to
      <email>root@example.com</email> using the <command>mail</command>
      command as described in the <link
      xl:href="#postfix.test-email-sending">previous section</link>. If
      everything works the received emails should be located in
      <filename>/var/mail/root</filename>. Check that file and make sure that
      you are sending email from the right domain (sender should be
      <email>root@example.com</email>). If you do not receive an email check
      the Postifx log file <email>/var/log/mail.log</email> to see what could
      have gone wrong.</para>
    </section>

    <section>
      <title>Virtual users and domains</title>

      <para></para>
    </section>
  </section>
</chapter>
